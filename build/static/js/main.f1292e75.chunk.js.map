{"version":3,"sources":["components/navlink/index.js","components/header/index.js","components/content/index.js","components/footer/index.js","components/lines/index.js","App.js","serviceWorker.js","index.js"],"names":["App","props","className","href","link","target","newTab","text","Header","React","Component","Content","heading","subheading","desc","Footer","Lines","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kNAQeA,MANf,SAAaC,GACX,OACE,uBAAGC,UAAU,WAAWC,KAAMF,EAAMG,KAAMC,OAAyB,SAAjBJ,EAAMK,OAAoB,SAAU,IAAKL,EAAMM,OC+BtFC,E,iLA7BP,OACI,4BAAQN,UAAU,UACd,wBAAIA,UAAU,qDACV,4BACI,wBAAIA,UAAU,YACV,4BACI,kBAAC,EAAD,CAASK,KAAK,QAAQH,KAAK,GAAGE,OAAO,WAEzC,4BACI,kBAAC,EAAD,CAASC,KAAK,WAAWH,KAAK,GAAGE,OAAO,aAIpD,4BACI,wBAAIJ,UAAU,YACV,4BACI,kBAAC,EAAD,CAASK,KAAK,SAASH,KAAK,8BAA8BE,OAAO,UAErE,4BACI,kBAAC,EAAD,CAASC,KAAK,WAAWH,KAAK,uCAAuCE,OAAO,kB,GArBvFG,IAAMC,WCUZC,MAZf,SAAiBV,GACf,OACE,yBAAKC,UAAU,WACX,yBAAKA,UAAU,kCACX,wBAAIA,UAAU,oBAAoBD,EAAMW,SACxC,uBAAGV,UAAU,uBAAuBD,EAAMY,aAE9C,uBAAGX,UAAU,iBAAiBD,EAAMa,QCG7BC,E,iLARP,OACI,4BAAQb,UAAU,sBACd,uBAAGA,UAAU,oBAAb,yC,GAJKO,IAAMC,WCgBZM,E,iLAdP,OACG,yBAAKd,UAAU,WACX,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,sB,GAVVO,IAAMC,WCsBXV,MAjBf,WACE,OACE,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,6BAASE,UAAU,yBACjB,kBAAC,EAAD,CACEU,QAAQ,WACRC,WAAW,sBACXC,KAAK,0HAGT,kBAAC,EAAD,QCPcG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.f1292e75.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <a className=\"nav-link\" href={props.link} target={props.newTab === \"true\" ? '_blank': ''}>{props.text}</a>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport NavLink from '../navlink/index';\r\n\r\nclass Header extends React.Component {\r\n    render(){\r\n        return(\r\n            <header className=\"header\">\r\n                <ul className=\"d-flex justify-content-between align-items-center\">\r\n                    <li>\r\n                        <ul className=\"nav-list\">\r\n                            <li>\r\n                                <NavLink text=\"About\" link=\"\" newTab=\"false\"/>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink text=\"projects\" link=\"\" newTab=\"false\"/>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <ul className=\"nav-list\">\r\n                            <li>\r\n                                <NavLink text=\"github\" link=\"https://github.com/nrvarun/\" newTab=\"true\"/>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink text=\"linkedin\" link=\"https://www.linkedin.com/in/varunnr/\" newTab=\"true\"/>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Content(props) {\r\n  return (\r\n    <div className=\"content\">\r\n        <div className=\"position-relative mb-4 mb-md-5\">\r\n            <h1 className=\"content__heading\">{props.heading}</h1>\r\n            <p className=\"content__subheading\">{props.subheading}</p>\r\n        </div>\r\n        <p className=\"content__desc\">{props.desc}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render(){\r\n        return(\r\n            <footer className=\"footer text-center\">\r\n                <p className=\"footer-copyright\">Â© 2019 | All rights reserved.</p>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nclass Lines extends React.Component {\r\n    render(){\r\n        return(\r\n           <div className=\"lines-w\">\r\n               <div className=\"line line--0\"></div>\r\n               <div className=\"line line--1\"></div>\r\n               <div className=\"line line--2\"></div>\r\n               <div className=\"line line--3\"></div>\r\n               <div className=\"line line--4\"></div>\r\n               <div className=\"line line--5\"></div>\r\n               <div className=\"line line--6\"></div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lines;","import React from 'react';\n\nimport Header from './components/header/index';\nimport Content from './components/content';\nimport Footer from './components/footer';\nimport Lines from './components/lines';\n\nfunction App() {\n  return (\n    <main>\n      <Lines/>\n      <Header/>\n      <section className=\"section section--home\">\n        <Content\n          heading=\"VARUN NR\"\n          subheading=\"Front-end Developer\"\n          desc=\"Bengaluru based frontend Dev with a love for UX and a curious guy fascinated by the endless possibilites of the Web!\"\n        />\n      </section>\n      <Footer/>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}